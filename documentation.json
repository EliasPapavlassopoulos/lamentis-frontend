{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-6b8671e8cf2ba7cef9f5baf3be11757136ef4b162c4177416a0033c30ed4bf1e12092f8fcab6ee9db9c4929c0e1ef9ba40aef0b7efdf195db84a2d4fd9649232",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lamentis-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'lamentis-frontend'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n    selector: 'lamentis-root',\n    standalone: true,\n    imports: [RouterOutlet],\n    templateUrl: './app.component.html',\n})\nexport class AppComponent {\n    title = 'lamentis-frontend';\n}\n\n// TODO: AuthService\n// // auth.service.ts\n// import { Injectable } from '@angular/core';\n// import { Auth, User, user } from '@angular/fire/auth';\n// import { UserCredential, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from 'firebase/auth';\n// import { Observable, from } from 'rxjs';\n\n// @Injectable({\n//   providedIn: 'root',\n// })\n// export class AuthService {\n//   currentUser$: Observable<User | null>;\n\n//   constructor(private auth: Auth) {\n//     this.currentUser$ = user(this.auth);\n//   }\n\n//   // register with e-mail and password\n//   register(email: string, password: string): Observable<UserCredential> {\n//     return from(createUserWithEmailAndPassword(this.auth, email, password));\n//   }\n\n//   // login with e-mal and password\n//   login(email: string, password: string): Observable<UserCredential> {\n//     return from(signInWithEmailAndPassword(this.auth, email, password));\n//   }\n\n//   // logout\n//   logout(): Observable<void> {\n//     return from(signOut(this.auth));\n//   }\n\n//   // get current user\n//   getCurrentUser(): User | null {\n//     return this.auth.currentUser;\n//   }\n\n//   // state of authentification as observable\n//   getAuthState(): Observable<User | null> {\n//     return this.currentUser$;\n//   }\n// }\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p class=\"text-pretty mt-40 text-center text-[2.4rem]\">See you soon !</p>\n<router-outlet />\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n    providers: [\n        provideZoneChangeDetection({ eventCoalescing: true }),\n        provideRouter(routes),\n    ],\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n    providers: [\n        provideZoneChangeDetection({ eventCoalescing: true }),\n        provideRouter(routes),\n    ],\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}